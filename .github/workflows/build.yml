name: Build App
on:
  push:
    paths:
      - '*.ts'
      - '*.tsx'
      - '*.json'
      - 'src/*'
      - 'assets/*'
      - 'typings/*'
      - '.github/workflows/*'
  pull_request:

jobs:
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: yarn
      - run: yarn run check
  test:
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v1
      - run: yarn
      - run: yarn run test
  lint:
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v1
      - run: yarn
      - run: yarn run lint
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint, typecheck]
    steps:
      - run: yarn global add expo-cli
      - uses: actions/checkout@v1
      - run: yarn
      - name: Fix inotify max_user_watches
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Install Sentry CLI
        run: curl -sL https://sentry.io/get-cli/ | bash
      - name: Setup Evironment for publish
        run: |
          export IS_PUSH=${{github.event_name == 'push'}} &&
          export IS_MASTER=${{github.ref == 'refs/heads/master'}} &&
          export IS_STABLE=${{github.ref == 'refs/heads/stable'}} &&
          export IS_RELEASE=${{IS_MASTER || IS_STAGING}} &&
          export SENTRY_ORG=dusterthefirst &&
          export SENTRY_AUTH_TOKEN=${{secrets.sentry_auth_token}} &&
          export VERSION=$(sentry-cli releases propose-version)
      - name: Log into Expo
        if: ${IS_PUSH} && ${IS_RELEASE}
        run: $(yarn global bin)/expo login --non-interactive -u $EXPO_USERNAME -p $EXPO_PASSWORD
        env:
          EXPO_USERNAME: ${{ secrets.expo_username }}
          EXPO_PASSWORD: ${{ secrets.expo_password }}
      - name: Publish to staging
        if: ${IS_PUSH} && ${IS_MASTER}
        run: $(yarn global bin)/expo publish --non-interactive --release-channel staging-$VERSION
      - name: Publish to stable
        if: ${IS_PUSH} && ${IS_STABLE}
        run: $(yarn global bin)/expo publish --non-interactive --release-channel stable-$VERSION
      - name: Create a new sentry release
        if: ${IS_PUSH} && ${IS_RELEASE}
        run: |
          sentry-cli releases new -p whs.js $VERSION &&
          sentry-cli releases set-commits --auto $VERSION
  # collect_metadata:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
