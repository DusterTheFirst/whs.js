// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests different header buttons Renders <HeaderCancelButton/> 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#1f85cc",
          "fontSize": 17,
        },
      ]
    }
  >
    Cancel
  </Text>
</View>
`;

exports[`Tests different header buttons Renders <HeaderLeftArrow/> 1`] = `
<View
  accessibilityLabel="LeftArrow"
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
      "height": 30,
      "justifyContent": "center",
      "opacity": 1,
      "width": 30,
    }
  }
>
  <Text />
</View>
`;

exports[`Tests different header buttons Renders <HeaderRightArrow/> 1`] = `
<View
  accessibilityLabel="RightArrow"
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flexBasis": 0,
      "flexGrow": 1,
      "flexShrink": 1,
      "height": 30,
      "justifyContent": "center",
      "opacity": 1,
      "width": 30,
    }
  }
>
  <Text />
</View>
`;

exports[`Tests different header buttons Renders <HeaderSaveButton/> 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#1f85cc",
          "fontSize": 17,
          "fontWeight": "bold",
        },
      ]
    }
  >
    Save
  </Text>
</View>
`;

exports[`Tests different variations of <MultilineHeader> Renders <MultilineHeaderTitle title="test title" subtitle="e"/> 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#000000",
          "fontSize": 15,
          "fontWeight": "bold",
          "textAlign": "center",
        },
      ]
    }
  >
    test title
  </Text>
  <Text
    style={
      Array [
        Object {
          "color": "#808080",
          "fontSize": 12,
          "textAlign": "center",
        },
      ]
    }
  >
    e
  </Text>
</View>
`;
