// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests different header buttons Renders <HeaderCancelButton/> 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "color": "#2f95dc",
        "fontSize": 17,
      }
    }
  >
    Cancel
  </Text>
</View>
`;

exports[`Tests different header buttons Renders <HeaderLeftArrow/> 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "height": 30,
      "justifyContent": "center",
      "opacity": 1,
      "width": 30,
    }
  }
>
  <Text
    accessibilityLabel="LeftArrow"
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "#2f95dc",
          "fontSize": 22,
        },
        undefined,
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Tests different header buttons Renders <HeaderRightArrow/> 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "height": 30,
      "justifyContent": "center",
      "opacity": 1,
      "width": 30,
    }
  }
>
  <Text
    accessibilityLabel="RightArrow"
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "#2f95dc",
          "fontSize": 22,
        },
        undefined,
        Object {
          "fontFamily": "Ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`Tests different header buttons Renders <HeaderSaveButton/> 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "#2f95dc",
          "fontSize": 17,
        },
        Object {
          "fontWeight": "bold",
        },
        undefined,
      ]
    }
  >
    Save
  </Text>
</View>
`;

exports[`Tests different variations of <MultilineHeader> Renders <MultilineHeaderTitle title="test title" subtitle="e"/> 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 15,
        "fontWeight": "bold",
        "textAlign": "center",
      }
    }
  >
    test title
  </Text>
  <Text
    style={
      Object {
        "color": "#808080",
        "fontSize": 12,
        "textAlign": "center",
      }
    }
  >
    e
  </Text>
</View>
`;
